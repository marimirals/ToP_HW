package bonjourMadame;

import java.io.IOException;

public class CardGame {
    private final Deck deck = new Deck();
    private Card lastQueen = null;
    private int player1Score = 0;
    private int player2Score = 0;
    private final int falseSlapPenalty = 1;

    public void start() {
        System.out.println("üé¥ **Bonjour Madame!**");
        System.out.println("–ü—Ä–∞–≤–∏–ª–∞:");
        System.out.println("1. –•–ª–æ–ø–∞–π—Ç–µ (–Ω–∞–∂–º–∏—Ç–µ 1 –∏–ª–∏ 9 ‚Äî —Å Enter), –∫–æ–≥–¥–∞ –¥–≤–µ –¥–∞–º—ã –æ–¥–Ω–æ–π –º–∞—Å—Ç–∏ –ø–æ–¥—Ä—è–¥");
        System.out.println("2. –ü–µ—Ä–≤—ã–π –Ω–∞–∂–∞–≤—à–∏–π –ø–æ–ª—É—á–∞–µ—Ç –æ—á–∫–æ");
        System.out.println("3. –õ–æ–∂–Ω—ã–π —Ö–ª–æ–ø–æ–∫ = —à—Ç—Ä–∞—Ñ " + falseSlapPenalty + " –æ—á–∫–æ");
        System.out.println("------------------------------------------");

        while (true) {
            Card card = deck.drawCard();
            if (card == null) {
                endGame();
                break;
            }

            boolean isQueenPair = (lastQueen != null &&
                    card.getRank().equals("–î–∞–º–∞") &&
                    lastQueen.getSuit().equals(card.getSuit()));

            System.out.println("\n–í—ã–ø–∞–ª–∞ –∫–∞—Ä—Ç–∞: " + card);
            System.out.println("–û—á–∫–∏: –ò–≥—Ä–æ–∫ 1 - " + player1Score + " | –ò–≥—Ä–æ–∫ 2 - " + player2Score);

            if (isQueenPair) {
                System.out.println("üõë –•–õ–û–ü–ê–¢–¨! –î–≤–µ –¥–∞–º—ã " + card.getSuit() + " –ø–æ–¥—Ä—è–¥!");
            }

            int player = getSlapInput(1500);

            if (player > 0) {
                if (isQueenPair) {
                    System.out.println("‚úÖ –ò–≥—Ä–æ–∫ " + player + " –ø–æ–±–µ–¥–∏–ª –≤ —ç—Ç–æ–º —Ä–∞—É–Ω–¥–µ!");
                    if (player == 1) player1Score++;
                    else player2Score++;
                } else {
                    System.out.println("‚ùå –õ–æ–∂–Ω—ã–π —Ö–ª–æ–ø–æ–∫ –æ—Ç –ò–≥—Ä–æ–∫–∞ " + player + "!");
                    if (player == 1) player1Score -= falseSlapPenalty;
                    else player2Score -= falseSlapPenalty;
                }
            } else if (isQueenPair) {
                System.out.println("‚ùå –ù–∏–∫—Ç–æ –Ω–µ —É—Å–ø–µ–ª!");
            }

            lastQueen = card.getRank().equals("–î–∞–º–∞") ? card : null;
        }
    }

    private int getSlapInput(int timeoutMillis) {
        long endTime = System.currentTimeMillis() + timeoutMillis;
        try {
            while (System.currentTimeMillis() < endTime) {
                if (System.in.available() > 0) { // –µ—Å–ª–∏ –≤ –±—É—Ñ–µ—Ä–µ –≤–≤–æ–¥–∞ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ
                    int input = System.in.read();
                    clearInputBuffer();
                    if (input == '1') return 1;
                    if (input == '9') return 2;
                }
                Thread.sleep(30);
            }
        } catch (IOException | InterruptedException e) {
            Thread.currentThread().interrupt();
        }
        return 0;
    }

    private void clearInputBuffer() {
        try {
            while (System.in.available() > 0) {
                System.in.read();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private void endGame() {
        System.out.println("\n–ö–∞—Ä—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.");
        System.out.println("–§–∏–Ω–∞–ª—å–Ω—ã–π —Å—á—ë—Ç:");
        System.out.println("–ò–≥—Ä–æ–∫ 1: " + player1Score);
        System.out.println("–ò–≥—Ä–æ–∫ 2: " + player2Score);

        if (player1Score > player2Score) {
            System.out.println("üèÜ –ü–æ–±–µ–¥–∏–ª –ò–≥—Ä–æ–∫ 1!");
        } else if (player2Score > player1Score) {
            System.out.println("üèÜ –ü–æ–±–µ–¥–∏–ª –ò–≥—Ä–æ–∫ 2!");
        } else {
            System.out.println("ü§ù –ù–∏—á—å—è!");
        }
    }
}
